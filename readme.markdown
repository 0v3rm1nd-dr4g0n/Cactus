# What is Cactus

Cactus is a simple but powerful static website generator using the [Django template system](http://docs.djangoproject.com/en/dev/topics/templates/). Cactus also makes it easy to develop and deploy your site to S3 directly.

Cactus is based on the idea that most dynamicness on websites these days can be done using Javascript and external services while the actual site can stay static. Still, it's nice to use a well known system like Django to generate your site so you can use the template system and other goodies. The static output allows for very fast and easy hosting, especially combined with a cdn like [Amazon Cloudfront](http://aws.amazon.com/cloudfront/). More discussion about this at [hacker news](http://news.ycombinator.com/item?id=2233620)

Alternatives to Cactus are [Hyde](http://ringce.com/hyde) and [Jekyll](https://github.com/mojombo/jekyll) but I wanted to build something simpler our in-house designers at [Sofa](http://www.madebysofa.com) could use more easily.


# Super quick tutorial for the impatient

First install Cactus with the following one liner

	sudo curl https://github.com/koenbok/Cactus/raw/master/install.sh | sudo sh

If you saw no errors, you can now generate a new project like this
	
	cactus init ~/my-cactus-testsite

The path should now contain a basic project layout that you can start editing. You can fire up a small webserver that continuously previews your site while building. This should automatically open your browser and preview the site. You can stop the server with control-c.

	cactus serve ~/my-cactus-testsite

Once you are ready to deploy your site to S3 you can run the following. You will need your [Amazon access keys](https://payments.amazon.com/sdui/sdui/helpTab/Checkout-by-Amazon/Advanced-Integration-Help/Using-Your-Access-Key).

	cactus deploy ~/my-cactus-testsite

Voila. Your Django generated website hosted on S3 generated by Cactus!



# Extended guide

## Installing

You can install Cactus using this one liner in the terminal. It will download cactus.py, move it to your /usr/local/bin path, make it executable and install the python dependencies.

	sudo curl https://github.com/koenbok/Cactus/raw/master/install.sh | sudo sh

If you get an error building pyfsevents, you need to install [Apple's Developer Tools][http://developer.apple.com/technologies/tools]. You can do without, but the serve command won't work.

## Creating a new project

You can create a new project by generating a new project stucture like this. Make sure the destination folder does not exist yet.

	cactus init [path]

If you did not see any errors, the path you pointed to should now look like this.
	
	- build					Generated site (upload this to your host)
	- pages					Your actual site pages
		- index.html
	- templates				Holds your django templates
		- base.html
	- static				Directory with static assets
		- images
		- css
		- js
	- extras
		- contexts.py		Allows for custom page contexts
		- templatetags.py	Hold custom django template tags

## Making your site

After generating your site you can start building by adding pages to contents, which can rely on templates. So for example if you want a page `/articles/2010/my-article.html` you would create the file with directories in your pages folder. Then you can edit the file and use django's template features.

## Building your site

When you build your site it will generate a static version in the build folder that you can upload to any host. Basically it will render each page from your pages folder, copy it over to the build folder and add all the static assets to it so it becomes a self contained website. You can build your site like this:

	cactus build [path]

Cactus can also run a small webserver to preview your site and update it when you make any changes. This is really handy when developing. You can run it like this:

	cactus serve [path]

### Linking and contexts

Cactus makes it easy to relatively link to pages and static assets inside your project by using the standard context variables MEDIA\_PATH and ROOT\_PATH. For example if you are at page `/blog/2011/Jan/my-article.html` and would like to link to `/contact.html` you would write the following: 

	<a href={{ ROOT_PATH }}/contact.html>Contact</a>

Optionally you can add variables to the context per page, by modifying the context function in contexts.py

### Custom Django template tags

TODO

## Deploying
	
Cactus can deploy your website directly to S3, all you need are your Amazon credentials and a bucket name. Cactus remembers these in a configuration file name config.json to make future deploys painless. The secret key is stored securely in the Keychain or similar services on other OSs.
	
	cactus deploy [path]

# Advanced usage

Sofa uses Cactus in combination with [Amazon S3 website features](http://aws.amazon.com/about-aws/whats-new/2011/02/17/Amazon-S3-Website-Features/) and CloudFront to build maintainable and very fast websites. But beacuse Cactus generates static sites, you could host them pretty much anywhere, from Akamai to DropBox.

Before deploying you could compress your Javascript and CSS using for example [Google Closure](http://code.google.com/closure/compiler/docs/gettingstarted_ui.html) and [CSSMin](http://code.google.com/p/cssmin/) for even more performant sites. 
